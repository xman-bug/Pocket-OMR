plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'com.example.handwrittenocrsumcam'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.handwrittenocrsumcam"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Enable vector drawable support for older versions
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
        debug {
            // Use debug keystore for debug builds
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            
            buildConfigField "boolean", "DEBUG_MODE", "true"
            resValue "string", "app_name", "OCR SumCam Debug"
        }
        
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            buildConfigField "boolean", "DEBUG_MODE", "false"
            resValue "string", "app_name", "OCR SumCam"
        }
    }

    // Configure APK splits for different architectures (optional)
    splits {
        abi {
            enable false // Set to true if you want separate APKs per architecture
            reset()
            include "x86", "x86_64", "arm64-v8a", "armeabi-v7a"
            universalApk true // Generate a universal APK that works on all architectures
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions { 
        jvmTarget = '1.8' 
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }

    // Configure APK output naming
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFileName = "HandwrittenOCRSumCam-${variant.name}-v${variant.versionName}-${variant.versionCode}.apk"
            outputFileName = outputFileName
        }
    }

    packagingOptions {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt'
            ]
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    
    // ML Kit for text recognition
    implementation 'com.google.mlkit:text-recognition:16.2.0'
    
    // Camera dependencies
    implementation 'androidx.camera:camera-core:1.3.1'
    implementation 'androidx.camera:camera-camera2:1.3.1'
    implementation 'androidx.camera:camera-lifecycle:1.3.1'
    implementation 'androidx.camera:camera-view:1.3.1'
    implementation 'androidx.camera:camera-extensions:1.3.1'
    
    // Material Design
    implementation 'com.google.android.material:material:1.11.0'
    
    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.22'
    
    // Testing dependencies
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}